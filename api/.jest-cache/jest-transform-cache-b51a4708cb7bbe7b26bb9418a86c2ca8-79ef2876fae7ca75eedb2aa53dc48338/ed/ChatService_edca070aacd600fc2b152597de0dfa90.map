{"version":3,"names":["cov_h98ukmzgs","actualCoverage","ChatService","constructor","f","s","chatRooms","Map","userChats","messageHistory","maxMessagesPerRoom","maxMessageLength","createChatRoom","roomId","options","b","name","type","maxUsers","isPrivate","createdBy","chatRoom","id","users","Set","moderators","createdAt","Date","lastActivity","settings","allowEmojis","allowLinks","allowImages","requireModeration","slowMode","slowModeInterval","set","add","joinChatRoom","userId","userInfo","get","Error","size","has","success","room","getPublicRoomInfo","message","leaveChatRoom","delete","userRooms","sendMessage","messageData","content","replyTo","metadata","validation","validateMessage","isValid","error","lastMessage","getLastMessageFromUser","now","timestamp","generateMessageId","sanitizeContent","edited","deleted","messages","push","length","splice","getPublicMessageInfo","getMessages","limit","before","after","filteredMessages","filter","msg","slice","map","editMessage","messageId","newContent","find","editedAt","deleteMessage","isModerator","deletedAt","deletedBy","getRoomUsers","Array","from","joinedAt","getUserChatRooms","Boolean","searchMessages","query","caseSensitive","searchQuery","toLowerCase","results","includes","updateRoomSettings","addModerator","addedBy","removeModerator","removedBy","cleanupInactiveRooms","maxInactiveTime","inactiveRooms","inactiveTime","getTime","forEach","trim","startsWith","replace","Math","random","toString","substr","pop","userCount","getChatStats","stats","totalRooms","totalUsers","totalMessages","roomsByType","averageMessagesPerRoom","round","module","exports"],"sources":["ChatService.js"],"sourcesContent":["class ChatService {\n  constructor() {\n    this.chatRooms = new Map(); // Map<roomId, ChatRoom>\n    this.userChats = new Map(); // Map<userId, Set<roomId>>\n    this.messageHistory = new Map(); // Map<roomId, Message[]>\n    this.maxMessagesPerRoom = 100; // Límite de mensajes por sala\n    this.maxMessageLength = 500; // Límite de caracteres por mensaje\n  }\n\n  // Crear una sala de chat\n  createChatRoom(roomId, options = {}) {\n    const {\n      name = `Chat de ${roomId}`,\n      type = 'lobby', // 'lobby', 'game', 'private'\n      maxUsers = 50,\n      isPrivate = false,\n      createdBy = null\n    } = options;\n\n    const chatRoom = {\n      id: roomId,\n      name,\n      type,\n      maxUsers,\n      isPrivate,\n      createdBy,\n      users: new Set(),\n      moderators: new Set(),\n      createdAt: new Date(),\n      lastActivity: new Date(),\n      settings: {\n        allowEmojis: true,\n        allowLinks: true,\n        allowImages: false,\n        requireModeration: false,\n        slowMode: false,\n        slowModeInterval: 3000 // 3 segundos\n      }\n    };\n\n    this.chatRooms.set(roomId, chatRoom);\n    this.messageHistory.set(roomId, []);\n\n    // Agregar moderador si se especifica\n    if (createdBy) {\n      chatRoom.moderators.add(createdBy);\n    }\n\n    return chatRoom;\n  }\n\n  // Unirse a una sala de chat\n  joinChatRoom(roomId, userId, userInfo = {}) {\n    const chatRoom = this.chatRooms.get(roomId);\n    if (!chatRoom) {\n      throw new Error('Sala de chat no encontrada');\n    }\n\n    if (chatRoom.users.size >= chatRoom.maxUsers) {\n      throw new Error('La sala de chat está llena');\n    }\n\n    // Agregar usuario a la sala\n    chatRoom.users.add(userId);\n    chatRoom.lastActivity = new Date();\n\n    // Agregar sala al usuario\n    if (!this.userChats.has(userId)) {\n      this.userChats.set(userId, new Set());\n    }\n    this.userChats.get(userId).add(roomId);\n\n    return {\n      success: true,\n      room: this.getPublicRoomInfo(chatRoom),\n      message: 'Te has unido al chat'\n    };\n  }\n\n  // Salir de una sala de chat\n  leaveChatRoom(roomId, userId) {\n    const chatRoom = this.chatRooms.get(roomId);\n    if (!chatRoom) {\n      throw new Error('Sala de chat no encontrada');\n    }\n\n    // Remover usuario de la sala\n    chatRoom.users.delete(userId);\n    chatRoom.lastActivity = new Date();\n\n    // Remover sala del usuario\n    const userRooms = this.userChats.get(userId);\n    if (userRooms) {\n      userRooms.delete(roomId);\n      if (userRooms.size === 0) {\n        this.userChats.delete(userId);\n      }\n    }\n\n    return {\n      success: true,\n      message: 'Has salido del chat'\n    };\n  }\n\n  // Enviar mensaje\n  sendMessage(roomId, userId, messageData) {\n    const chatRoom = this.chatRooms.get(roomId);\n    if (!chatRoom) {\n      throw new Error('Sala de chat no encontrada');\n    }\n\n    if (!chatRoom.users.has(userId)) {\n      throw new Error('No estás en esta sala de chat');\n    }\n\n    const {\n      content,\n      type = 'text', // 'text', 'system', 'emote', 'image'\n      replyTo = null,\n      metadata = {}\n    } = messageData;\n\n    // Validar mensaje\n    const validation = this.validateMessage(content, type, chatRoom);\n    if (!validation.isValid) {\n      throw new Error(validation.error);\n    }\n\n    // Verificar modo lento\n    if (chatRoom.settings.slowMode) {\n      const lastMessage = this.getLastMessageFromUser(roomId, userId);\n      if (lastMessage && Date.now() - lastMessage.timestamp < chatRoom.settings.slowModeInterval) {\n        throw new Error('Modo lento activado. Espera antes de enviar otro mensaje');\n      }\n    }\n\n    // Crear mensaje\n    const message = {\n      id: this.generateMessageId(),\n      roomId,\n      userId,\n      content: this.sanitizeContent(content),\n      type,\n      replyTo,\n      metadata,\n      timestamp: new Date(),\n      edited: false,\n      deleted: false\n    };\n\n    // Agregar mensaje al historial\n    const messages = this.messageHistory.get(roomId) || [];\n    messages.push(message);\n\n    // Limpiar mensajes antiguos si excede el límite\n    if (messages.length > this.maxMessagesPerRoom) {\n      messages.splice(0, messages.length - this.maxMessagesPerRoom);\n    }\n\n    this.messageHistory.set(roomId, messages);\n    chatRoom.lastActivity = new Date();\n\n    return {\n      success: true,\n      message: this.getPublicMessageInfo(message)\n    };\n  }\n\n  // Obtener mensajes de una sala\n  getMessages(roomId, options = {}) {\n    const {\n      limit = 50,\n      before = null,\n      after = null\n    } = options;\n\n    const messages = this.messageHistory.get(roomId) || [];\n    let filteredMessages = [...messages];\n\n    // Filtrar por timestamp si se especifica\n    if (before) {\n      filteredMessages = filteredMessages.filter(msg => msg.timestamp < new Date(before));\n    }\n\n    if (after) {\n      filteredMessages = filteredMessages.filter(msg => msg.timestamp > new Date(after));\n    }\n\n    // Limitar cantidad de mensajes\n    if (limit) {\n      filteredMessages = filteredMessages.slice(-limit);\n    }\n\n    return filteredMessages.map(msg => this.getPublicMessageInfo(msg));\n  }\n\n  // Editar mensaje\n  editMessage(roomId, messageId, userId, newContent) {\n    const messages = this.messageHistory.get(roomId) || [];\n    const message = messages.find(msg => msg.id === messageId);\n\n    if (!message) {\n      throw new Error('Mensaje no encontrado');\n    }\n\n    if (message.userId !== userId) {\n      throw new Error('No puedes editar mensajes de otros usuarios');\n    }\n\n    // Validar nuevo contenido\n    const validation = this.validateMessage(newContent, message.type);\n    if (!validation.isValid) {\n      throw new Error(validation.error);\n    }\n\n    // Actualizar mensaje\n    message.content = this.sanitizeContent(newContent);\n    message.edited = true;\n    message.editedAt = new Date();\n\n    return {\n      success: true,\n      message: this.getPublicMessageInfo(message)\n    };\n  }\n\n  // Eliminar mensaje\n  deleteMessage(roomId, messageId, userId, isModerator = false) {\n    const messages = this.messageHistory.get(roomId) || [];\n    const message = messages.find(msg => msg.id === messageId);\n\n    if (!message) {\n      throw new Error('Mensaje no encontrado');\n    }\n\n    if (message.userId !== userId && !isModerator) {\n      throw new Error('No puedes eliminar mensajes de otros usuarios');\n    }\n\n    // Marcar como eliminado\n    message.deleted = true;\n    message.deletedAt = new Date();\n    message.deletedBy = userId;\n\n    return {\n      success: true,\n      message: 'Mensaje eliminado'\n    };\n  }\n\n  // Obtener información de usuarios en una sala\n  getRoomUsers(roomId) {\n    const chatRoom = this.chatRooms.get(roomId);\n    if (!chatRoom) {\n      return [];\n    }\n\n    return Array.from(chatRoom.users).map(userId => ({\n      userId,\n      isModerator: chatRoom.moderators.has(userId),\n      joinedAt: chatRoom.lastActivity // Simplificado, en producción sería más preciso\n    }));\n  }\n\n  // Obtener salas de chat del usuario\n  getUserChatRooms(userId) {\n    const userRooms = this.userChats.get(userId) || new Set();\n    return Array.from(userRooms).map(roomId => {\n      const chatRoom = this.chatRooms.get(roomId);\n      return chatRoom ? this.getPublicRoomInfo(chatRoom) : null;\n    }).filter(Boolean);\n  }\n\n  // Buscar mensajes\n  searchMessages(roomId, query, options = {}) {\n    const {\n      limit = 20,\n      caseSensitive = false\n    } = options;\n\n    const messages = this.messageHistory.get(roomId) || [];\n    const searchQuery = caseSensitive ? query : query.toLowerCase();\n\n    const results = messages\n      .filter(msg => !msg.deleted)\n      .filter(msg => {\n        const content = caseSensitive ? msg.content : msg.content.toLowerCase();\n        return content.includes(searchQuery);\n      })\n      .slice(-limit)\n      .map(msg => this.getPublicMessageInfo(msg));\n\n    return results;\n  }\n\n  // Configurar sala de chat\n  updateRoomSettings(roomId, settings, userId) {\n    const chatRoom = this.chatRooms.get(roomId);\n    if (!chatRoom) {\n      throw new Error('Sala de chat no encontrada');\n    }\n\n    if (!chatRoom.moderators.has(userId)) {\n      throw new Error('No tienes permisos para modificar la configuración');\n    }\n\n    chatRoom.settings = {\n      ...chatRoom.settings,\n      ...settings\n    };\n\n    return {\n      success: true,\n      settings: chatRoom.settings\n    };\n  }\n\n  // Agregar moderador\n  addModerator(roomId, userId, addedBy) {\n    const chatRoom = this.chatRooms.get(roomId);\n    if (!chatRoom) {\n      throw new Error('Sala de chat no encontrada');\n    }\n\n    if (!chatRoom.moderators.has(addedBy)) {\n      throw new Error('No tienes permisos para agregar moderadores');\n    }\n\n    chatRoom.moderators.add(userId);\n\n    return {\n      success: true,\n      message: 'Moderador agregado'\n    };\n  }\n\n  // Remover moderador\n  removeModerator(roomId, userId, removedBy) {\n    const chatRoom = this.chatRooms.get(roomId);\n    if (!chatRoom) {\n      throw new Error('Sala de chat no encontrada');\n    }\n\n    if (!chatRoom.moderators.has(removedBy)) {\n      throw new Error('No tienes permisos para remover moderadores');\n    }\n\n    chatRoom.moderators.delete(userId);\n\n    return {\n      success: true,\n      message: 'Moderador removido'\n    };\n  }\n\n  // Limpiar salas inactivas\n  cleanupInactiveRooms(maxInactiveTime = 24 * 60 * 60 * 1000) { // 24 horas por defecto\n    const now = new Date();\n    const inactiveRooms = [];\n\n    for (const [roomId, chatRoom] of this.chatRooms) {\n      const inactiveTime = now.getTime() - chatRoom.lastActivity.getTime();\n      if (inactiveTime > maxInactiveTime && chatRoom.users.size === 0) {\n        inactiveRooms.push(roomId);\n      }\n    }\n\n    inactiveRooms.forEach(roomId => {\n      this.chatRooms.delete(roomId);\n      this.messageHistory.delete(roomId);\n    });\n\n    return inactiveRooms.length;\n  }\n\n  // Utilidades privadas\n  validateMessage(content, type, chatRoom = null) {\n    if (!content || typeof content !== 'string') {\n      return { isValid: false, error: 'El contenido del mensaje es requerido' };\n    }\n\n    if (content.length > this.maxMessageLength) {\n      return { isValid: false, error: `El mensaje no puede exceder ${this.maxMessageLength} caracteres` };\n    }\n\n    if (content.trim().length === 0) {\n      return { isValid: false, error: 'El mensaje no puede estar vacío' };\n    }\n\n    // Validaciones específicas por tipo\n    switch (type) {\n      case 'text':\n        // Validaciones básicas para texto\n        break;\n      case 'emote':\n        // Validaciones para emotes\n        if (!content.startsWith('/me ')) {\n          return { isValid: false, error: 'Los emotes deben comenzar con /me ' };\n        }\n        break;\n      case 'system':\n        // Solo moderadores pueden enviar mensajes del sistema\n        if (chatRoom && !chatRoom.moderators.has(userId)) {\n          return { isValid: false, error: 'Solo moderadores pueden enviar mensajes del sistema' };\n        }\n        break;\n      default:\n        return { isValid: false, error: 'Tipo de mensaje no válido' };\n    }\n\n    return { isValid: true };\n  }\n\n  sanitizeContent(content) {\n    // Sanitización básica del contenido\n    return content\n      .trim()\n      .replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, '')\n      .replace(/<iframe\\b[^<]*(?:(?!<\\/iframe>)<[^<]*)*<\\/iframe>/gi, '');\n  }\n\n  generateMessageId() {\n    return `msg_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  }\n\n  getLastMessageFromUser(roomId, userId) {\n    const messages = this.messageHistory.get(roomId) || [];\n    return messages\n      .filter(msg => msg.userId === userId && !msg.deleted)\n      .pop();\n  }\n\n  getPublicMessageInfo(message) {\n    return {\n      id: message.id,\n      userId: message.userId,\n      content: message.deleted ? '[Mensaje eliminado]' : message.content,\n      type: message.type,\n      replyTo: message.replyTo,\n      timestamp: message.timestamp,\n      edited: message.edited,\n      deleted: message.deleted,\n      metadata: message.metadata\n    };\n  }\n\n  getPublicRoomInfo(chatRoom) {\n    return {\n      id: chatRoom.id,\n      name: chatRoom.name,\n      type: chatRoom.type,\n      userCount: chatRoom.users.size,\n      maxUsers: chatRoom.maxUsers,\n      isPrivate: chatRoom.isPrivate,\n      lastActivity: chatRoom.lastActivity,\n      settings: chatRoom.settings\n    };\n  }\n\n  // Obtener estadísticas del chat\n  getChatStats() {\n    const stats = {\n      totalRooms: this.chatRooms.size,\n      totalUsers: this.userChats.size,\n      totalMessages: 0,\n      roomsByType: {},\n      averageMessagesPerRoom: 0\n    };\n\n    for (const [roomId, messages] of this.messageHistory) {\n      stats.totalMessages += messages.length;\n    }\n\n    for (const [roomId, chatRoom] of this.chatRooms) {\n      const type = chatRoom.type;\n      stats.roomsByType[type] = (stats.roomsByType[type] || 0) + 1;\n    }\n\n    stats.averageMessagesPerRoom = stats.totalRooms > 0 \n      ? Math.round(stats.totalMessages / stats.totalRooms) \n      : 0;\n\n    return stats;\n  }\n}\n\nmodule.exports = ChatService;\n"],"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","ignoreList":[]}