name: Project CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production
      components:
        description: 'Components to deploy'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - backend
          - frontend

jobs:
  validate:
    name: Validate Project
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Validate project structure
        run: |
          echo "Validating project structure..."
          
          # Verificar que existen los directorios principales
          if [ ! -d "api" ]; then
            echo "‚ùå Backend directory 'api' not found"
            exit 1
          fi
          
          if [ ! -d "web" ]; then
            echo "‚ùå Frontend directory 'web' not found"
            exit 1
          fi
          
          # Verificar archivos de configuraci√≥n
          if [ ! -f "api/package.json" ]; then
            echo "‚ùå Backend package.json not found"
            exit 1
          fi
          
          if [ ! -f "web/package.json" ]; then
            echo "‚ùå Frontend package.json not found"
            exit 1
          fi
          
          echo "‚úÖ Project structure is valid"

  backend-ci:
    name: Backend CI
    runs-on: ubuntu-latest
    needs: validate
    uses: ./.github/workflows/backend-ci.yml
    
  frontend-ci:
    name: Frontend CI
    runs-on: ubuntu-latest
    needs: validate
    uses: ./.github/workflows/frontend-ci.yml

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [backend-ci, frontend-ci]
    uses: ./.github/workflows/integration-tests.yml

  security-analysis:
    name: Security Analysis
    runs-on: ubuntu-latest
    needs: [backend-ci, frontend-ci]
    uses: ./.github/workflows/codeql-analysis.yml

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [integration-tests, security-analysis]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment: ${{ github.event.inputs.environment || 'staging' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Deploy backend
        if: github.event.inputs.components == 'all' || github.event.inputs.components == 'backend'
        run: |
          echo "Deploying backend to ${{ github.event.inputs.environment || 'staging' }}..."
          # Aqu√≠ ir√≠an los comandos de despliegue espec√≠ficos del backend
          
      - name: Deploy frontend
        if: github.event.inputs.components == 'all' || github.event.inputs.components == 'frontend'
        run: |
          echo "Deploying frontend to ${{ github.event.inputs.environment || 'staging' }}..."
          # Aqu√≠ ir√≠an los comandos de despliegue espec√≠ficos del frontend
          
      - name: Verify deployment
        run: |
          echo "Verifying deployment..."
          # Verificar que la aplicaci√≥n est√© funcionando
          
      - name: Notify deployment
        run: |
          echo "Deployment to ${{ github.event.inputs.environment || 'staging' }} completed successfully!"

  post-deploy:
    name: Post Deployment
    runs-on: ubuntu-latest
    needs: deploy
    if: always()
    
    steps:
      - name: Generate deployment report
        run: |
          echo "# Deployment Report" > deployment-report.md
          echo "Generated: $(date -u)" >> deployment-report.md
          echo "" >> deployment-report.md
          echo "## Deployment Summary" >> deployment-report.md
          echo "" >> deployment-report.md
          echo "- **Environment**: ${{ github.event.inputs.environment || 'staging' }}" >> deployment-report.md
          echo "- **Components**: ${{ github.event.inputs.components || 'all' }}" >> deployment-report.md
          echo "- **Status**: ${{ needs.deploy.result }}" >> deployment-report.md
          echo "- **Workflow**: ${{ github.workflow }}" >> deployment-report.md
          echo "- **Run ID**: ${{ github.run_id }}" >> deployment-report.md
          
      - name: Upload deployment report
        uses: actions/upload-artifact@v3
        with:
          name: deployment-report
          path: deployment-report.md
          retention-days: 30
          
      - name: Notify team
        run: |
          if [ "${{ needs.deploy.result }}" = "success" ]; then
            echo "üéâ Deployment completed successfully!"
          else
            echo "‚ùå Deployment failed!"
          fi
          # Aqu√≠ se podr√≠a enviar notificaci√≥n a Slack/Discord
